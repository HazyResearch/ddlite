[tox]
skip_missing_interpreters = true
envlist =
    py36,
    py37,
    type,
    check,
isolated_build = true

[testenv]
description = run the test driver with {basepython}
# Note: in order to allow dependency library install reuse
# on CI, we allow overriding the default envdir
# (specified as `{toxworkdir}/{envname}`) by setting the
# environment variable `TOX_INSTALL_DIR`. We avoid
# collision with the already-used `TOX_ENV_DIR`.
envdir = {env:TOX_INSTALL_DIR:{toxworkdir}/{envname}}
# Note: we try to keep the deps the same for all tests
# running on CI so that we skip reinstalling dependency
# libraries for all testenvs
deps =
    -rrequirements.txt
    -rrequirements-pyspark.txt
commands_pre = python -m spacy download en_core_web_sm
commands = python -m pytest -m 'not spark and not complex' {posargs}

[testenv:spark]
description = run the test driver with {basepython}
passenv = JAVA_HOME
commands_pre = python -m spacy download en_core_web_sm
commands = python -m pytest -m spark {posargs}

[testenv:check]
description = check the code style
basepython = python3
commands_pre =
commands =
    isort -rc -c .
    black --check .
    flake8 .
    {toxinidir}/scripts/check_requirements.py

[testenv:type]
description = run static type checking
basepython = python3
commands_pre =
commands = mypy -p snorkel

[testenv:docstyle]
description = check doc style
basepython = python3
commands_pre =
commands = pydocstyle snorkel

[testenv:coverage]
description = run coverage checks
basepython = python3
# Note: make sure this matches testenv since this is used
# on CI as the default unit test runner
commands = python -m pytest -m 'not spark and not complex' --cov=snorkel

[testenv:dev]
description = install dev tools
basepython = python3
envdir = {toxinidir}/.env
usedevelop = True
commands_pre =
commands =

[testenv:fix]
description = run code stylers
basepython = python3
usedevelop = True
commands_pre =
commands =
    isort -rc .
    black .
