# Only run CI on master, release branches, tags, and PRs
if: tag IS present OR type = pull_request OR ((branch = master OR branch = redux OR branch =~ release-*) AND type = push)

# Main dist is Python
language: python

# Cache package wheels
cache: pip

# python3.7 only available on xenial
dist: xenial

jobs:
  include:
    - if: type = pull_request
      name: "Python 3.6: unit tests"
      python: 3.6
      env: TOXENV=coverage,type,check TOX_INSTALL_DIR=.env JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
    - if: type = pull_request
      name: "Python 3.7: unit tests"
      python: 3.7
      env: TOXENV=coverage,type,check TOX_INSTALL_DIR=.env JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
    - if: type != pull_request
      name: "Python 3.6: unit + integration tests"
      python: 3.6
      env: TOXENV=coverage,complex,spark,type,check TOX_INSTALL_DIR=.env JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
    - if: type != pull_request
      name: "Python 3.7: unit + integration tests"
      python: 3.7
      env: TOXENV=coverage,complex,spark,type,check TOX_INSTALL_DIR=.env JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64

# Install JDK8 for PySpark tests
before_install:
  - sudo add-apt-repository -y ppa:openjdk-r/ppa
  - sudo apt-get -qq update
  - sudo apt-get install -y openjdk-8-jdk --no-install-recommends
  - sudo update-java-alternatives -s java-1.8.0-openjdk-amd64

install:
  - pip install -U pip setuptools
  - pip install -U tox==3.12.0
  - pip install -U codecov
  - tox --notest

script:
  - tox

after_success:
  - travis_retry codecov

notifications:
  slack:
    on_success: change # default: change [change, always, never]
    on_failure: change # default: always
    secure: xYSWI2NgYmQ0X0U+WPYnUAWDnu56UueP70FSCx9GBNKJJZMAfavzQGSYimy7lQGTxy37gXAmfeQH9SM/DXfZLq/tplvLxq25rlMnOKSDXSvFv3hloCb4kBszpBfJugIaPoq83+CFOjUKyYsAWnxY2Y66+XI4NQQz6IhysiyNtFaOOlGIUO6E39I1kLfXz42lcp+XwjaVbj8ibpQajGdnbXvxKZEFIutQAOq4m10CHVyEdtCl5ck+jHDFgMkrM+0yycRCDsFgphMsKXQ5czThyW6knkOLOqFunQCDOE2UjavpSeNtdKmRQViA81Jj5YSh6RxnEesG1Eu2LAfz/2MJv42E4FmK76/K6UqettFoKbOwAtva7k5T83tQ3ZSXWzgsswqdkajX4fejSR1eYvhW9PvUf9bZAsu36o5wuXyDXK43cN8C1lSGZy+GK07rFWLPzKfdJ63HNkexdI/zkyCcRtVGrqh2qbzAotDK8yg3FJYpLAHSh1P6Zhbz+tsc0/kHRBmuqyNuILpbd/WQtxEDO8wTld1fsBrjwTW0/YgKequHv9bumIeeAW5hMZpv8VWvN5vEVJpSNg3/hd1MgAlhZupWj9ttJvj77PuhUlsJOCRX//Z+RVdcL1roMJ+IEN90y7+S1gEH2VUbpzf46zdH9oBUc4EQseCCYLWkLGnsxRA=